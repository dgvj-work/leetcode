"""
the basic idea is the last values in nums1 are 0s so lets try to fill the last value with the largest element. 
So we will have two pointers one on the nums1 non 0 last val and second on nums2 last val and keep inserting. 
"""
class Solution(object):
    def merge(self, nums1, m, nums2, n):
        
        l = m-1
        r = n-1
        
        for i in range(len(nums1)-1,-1,-1):
            
            if l < 0 or r < 0:
                if l<0:
                    nums1[i] = nums2[r]
                    r-=1
                else:
                    nums1[i] = nums1[l]
                    l-=1
                    
            
            else:
                if nums2[r] >= nums1[l]:             
                    nums1[i] = nums2[r]              
                    r-=1
                
                else:
                    nums1[i] = nums1[l]
                    l-=1
        return nums1
               
-------clean way ------
